(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



BeginPackage["FusionAtlas`GraphPlanarAlgebra4`",{"FusionAtlas`","FusionAtlas`Bigraphs`","FusionAtlas`GraphPairs`","FusionAtlas`PackageData`","FusionAtlas`Debugging`"}];


NumberFieldGenerator;EnlargeNumberField;RedefineLopsidedDimension;LopsidedDimension;SphericalDimension;CriticalPointCoefficient;GPA4Element;EmptyGPA4Element;CapTopLeft;PartialTrace;GPA4Trace;GPA4TraceEvaluation;TurnUpBottomRightCorner;TurnDownTopRightCorner;TurnUpBottomLeftCorner;TurnDownTopLeftCorner;RotateOneClick;RotateTwoClicks;GPAFourierTransform;GPAFourierTransformTwice;AddStrandOnRight;AddStrandOnLeft;AddStrandsOnLeft;GPAMultiply;GPAConjugate;GPACoefficients;GPACoefficientsAtStar;VariableGPA4Element;GPA4Matrix;GPATensor;GPAInverse;Rotate\[Pi]Clockwise;Rotate\[Pi]Counterclockwise;GPAMultiplyWithOffset;PivotalStructure;ConnectionGrid;StrandCrossingAbove;StrandCrossingBelow;TwoStrandFlatness;OneStrandFlatness;FusionRulesFromConnection;LowestWeightEigenvectorConditions;LowestWeightConditions;CollectGPA4Matrix;CollectGPA4Element;LowestWeightEigenspace;LowestWeightSpace;LoadLowestWeightEigenspaces;ChangePivotalStructure;NumberFieldGauge;FindEquationsForFlatGenerators;FindFlatGenerators;FindFlatLowestWeightVectors;qInteger\[Delta];JonesWenzlIdempotent;LoadIdempotents;S2Equation;RowReducedS2Equation;S2Solutions;IdentityTL;OneCupTL;OneCupJonesWenzl;SomeOneCupJonesWenzl;AnnularConsequences;GPACirc;GPAStar;GaugeTransform; GaugeAction; VariableGaugeElement; FindGaugeElementRelating;WenzlRecursion;


progressiveRootReduce[x_GPA4Element]:= MapAt[progressiveRootReduce,x,-1]
parallelRootReduce[x_GPA4Element]:= MapAt[parallelRootReduce,x,-1]


Begin["`Private`"];


NumberFieldGenerator[g:{_BigraphWithDuals,_BigraphWithDuals}]:=NumberFieldGenerator[g]=RootReduce[Sqrt[2-ReducedDimensionOfGenerator[g[[1,1]]]^2]]


ToNumberField0[x_?NumericQ,y_?NumericQ]:=(ToNumberField[RootReduce[x],y])
ToNumberField0[x_,y_]:=x


EnlargeNumberField[g:{_BigraphWithDuals,_BigraphWithDuals}][x_?NumericQ]:=Module[{},
(*Off[ToNumberField::"nnfel"];*)
Switch[ToNumberField0[x,NumberFieldGenerator[g]],
_ToNumberField,
NumberFieldGenerator[g]=ToNumberField[{RootReduce[x],NumberFieldGenerator[g]}][[1,1]];
DebugPrint["Enlarging number field for ",GraphToString[g],": ",NumberFieldGenerator[g]],
_,0
];
(*On[ToNumberField::"nnfel"];*)
RedefineLopsidedDimension[];
NumberFieldGenerator[g]
]


RedefineLopsidedDimension[]:=(
Clear[LopsidedDimension];
LopsidedDimension[g:{_BigraphWithDuals,_BigraphWithDuals},Vertex[i_,j_,d_,k_]]:=LopsidedDimension[g,Vertex[i,j,d,k]]=
With[{\[Delta]=ReducedDimensionOfGenerator[g[[1,1]]]},
ToNumberField0[RootReduce[Switch[{i,j},{0,0},1,{0,1},1/\[Delta],{1,1},1,{1,0},\[Delta]]ReducedDimensionsByDepth[g[[i+1,1]]][[d+1,k]]],NumberFieldGenerator[g]]
];
)


RedefineLopsidedDimension[]


Clear[SphericalDimension]


SphericalDimension[g:{_BigraphWithDuals,_BigraphWithDuals},Vertex[i_,j_,d_,k_]]:=SphericalDimension[g,Vertex[i,j,d,k]]=ReducedDimensionsByDepth[g[[i+1,1]]][[d+1,k]]



CriticalPointCoefficient[G:{_BigraphWithDuals,_BigraphWithDuals},sign_,above_Vertex,below_Vertex,pivotalStructure:("Spherical"|"Lopsided")]:=Switch[pivotalStructure,
"Spherical",(Sqrt[SphericalDimension[G,above]])^sign (Sqrt[SphericalDimension[G,below]])^-sign,
"Lopsided",LopsidedDimension[G,above]^sign
]


EmptyGPA4Element[g:{_BigraphWithDuals,_BigraphWithDuals},over:{0,0}|{0,1}|{1,1}|{1,0},pivotalStructure:("Spherical"|"Lopsided")]:=GPA4Element[g,{over},{0,0},pivotalStructure,#->1&/@GraphLoops[g,{over}]]


otherLoopsZero[n_]:={RepeatedSequence[_Vertex,_Integer,{n}]}->0
otherLoopsZero[0]:={_Vertex}->0


CapTopLeft[GPA4Element[g:{_BigraphWithDuals,_BigraphWithDuals},over:{({0,0}|{0,1}|{1,1}|{1,0})...},{down_Integer,up_Integer},pivotalStructure:("Spherical"|"Lopsided"),coefficients_List]]/;up>=2\[And]up+down>=4\[And]over[[1]]==over[[3]]:=
With[{dispatch=Dispatch[coefficients~Join~{otherLoopsZero[down+up]}]},
ExpandCoefficientRules[
GPA4Element[g,Drop[over,2],{down,up-2},pivotalStructure,{{a_Vertex,na_Integer,z___}:>Plus@@((CriticalPointCoefficient[g,-1,a,#[[1]],pivotalStructure])({a,#[[2]],#[[1]],#[[2]],a,na,z}/.dispatch)&/@EdgesAdjacentTo[g,a,over[[2]]])}]
]
]


CapTopLeft[GPA4Element[g:{_BigraphWithDuals,_BigraphWithDuals},over:{({0,0}|{0,1}|{1,1}|{1,0})...},{0,2},pivotalStructure:("Spherical"|"Lopsided"),coefficients_List]]/;over[[1]]==over[[3]]:=
With[{dispatch=Dispatch[coefficients~Join~{otherLoopsZero[2]}]},
ExpandCoefficientRules[
GPA4Element[g,Drop[over,2],{0,0},pivotalStructure,{{a_Vertex}:>Plus@@((CriticalPointCoefficient[g,-1,a,#[[1]],pivotalStructure])({a,#[[2]],#[[1]],#[[2]]}/.dispatch)&/@EdgesAdjacentTo[g,a,over[[2]]])}]
]
]


Clear[PartialTrace]


(* Note; the implementation below doesn't seem to work when one of up and down is 1 *)


PartialTrace[GPA4Element[g:{_BigraphWithDuals,_BigraphWithDuals},over:{({0,0}|{0,1}|{1,1}|{1,0})...},{down_Integer,up_Integer},pivotalStructure:("Spherical"|"Lopsided"),coefficients_List]]/;(up>1&&down>1)\[And]over[[up]]==over[[up+2]]:=
With[{dispatch=Dispatch[coefficients~Join~{otherLoopsZero[down+up]}]},
ExpandCoefficientRules[
GPA4Element[g,Drop[over,{up+1,up+2}],{down-1,up-1},pivotalStructure,{{A:RepeatedSequence[_Vertex,_Integer,{up-1}],v_Vertex,n_Integer,B___}:>Plus@@((CriticalPointCoefficient[g,1,#[[1]],v,pivotalStructure]CriticalPointCoefficient[g,-1,v,#[[1]],pivotalStructure])({A,v,#[[2]],#[[1]],#[[2]],v,n,B}/.dispatch)&/@EdgesAdjacentTo[g,v,over[[up+1]]])}]
]
]


PartialTrace[GPA4Element[g:{_BigraphWithDuals,_BigraphWithDuals},over:{({0,0}|{0,1}|{1,1}|{1,0})...},{1,1},pivotalStructure:("Spherical"|"Lopsided"),coefficients_List]]:=
With[{dispatch=Dispatch[coefficients~Join~{otherLoopsZero[2]}]},
ExpandCoefficientRules[
GPA4Element[g,Drop[over,{2,3}],{0,0},pivotalStructure,{{v_Vertex}:>Plus@@((CriticalPointCoefficient[g,1,#[[1]],v,pivotalStructure]CriticalPointCoefficient[g,-1,v,#[[1]],pivotalStructure])({v,#[[2]],#[[1]],#[[2]]}/.dispatch)&/@EdgesAdjacentTo[g,v,over[[2]]])}]
]
]


GPA4Trace[A:GPA4Element[_,_,{k_,k_},_,_]]:=Nest[PartialTrace,A,k]


GPA4TraceEvaluation[A:GPA4Element[_,_,{k_,k_},_,_]]:=With[{coeffs=GPACoefficients[GPA4Trace[A]]},
Union[cachedRootReduce[coeffs]]/.{{x_}:>(coeffs[[1]]/.{y_AlgebraicNumber:>y,y_:>RootReduce[y]}),_:>(Print["0-box didn't have constant values"];Abort[])}
]


RepeatedSequence[A__,repeat:(_Integer|{_Integer}|{_Integer,_Integer}):\[Infinity]]:=Repeated[PatternSequence[A],repeat]


TurnUpBottomRightCorner[GPA4Element[g:{_BigraphWithDuals,_BigraphWithDuals},over:{({0,0}|{0,1}|{1,1}|{1,0})...},{down_Integer,up_Integer},pivotalStructure:("Spherical"|"Lopsided"),coefficients_]/;down>=1]:=
GPA4Element[g,over,{down-1,up+1},pivotalStructure,
coefficients/.({A:RepeatedSequence[_Vertex,_Integer,{up}],v_Vertex,n_Integer,B___}->\[Zeta]_):>({A,v,n,B}->\[Zeta] CriticalPointCoefficient[g,1,v,{B,A}[[1]],pivotalStructure])
]


TurnDownTopRightCorner[GPA4Element[g:{_BigraphWithDuals,_BigraphWithDuals},over:{({0,0}|{0,1}|{1,1}|{1,0})...},{down_Integer,up_Integer},pivotalStructure:("Spherical"|"Lopsided"),coefficients_]/;up>=1]:=
GPA4Element[g,over,{down+1,up-1},pivotalStructure,coefficients/.({A:RepeatedSequence[_Vertex,_Integer,{up-1}],v_Vertex,n_Integer,B___}->\[Zeta]_):>({A,v,n,B}->\[Zeta] CriticalPointCoefficient[g,-1,v,{B,A}[[1]],pivotalStructure])
]


TurnUpBottomLeftCorner[GPA4Element[g:{_BigraphWithDuals,_BigraphWithDuals},over:{({0,0}|{0,1}|{1,1}|{1,0})...},{down_Integer,up_Integer},pivotalStructure:("Spherical"|"Lopsided"),coefficients_]/;down>=1]:=
GPA4Element[g,{over[[-2]]}~Join~Most[over],{down-1,up+1},pivotalStructure,
coefficients/.({a_Vertex,na_Integer,B___,b_Vertex,nb_Integer}->\[Zeta]_):>({b,nb,a,na,B}->\[Zeta] CriticalPointCoefficient[g,1,a,b,pivotalStructure])
]


TurnDownTopLeftCorner[GPA4Element[g:{_BigraphWithDuals,_BigraphWithDuals},over:{({0,0}|{0,1}|{1,1}|{1,0})...},{down_Integer,up_Integer},pivotalStructure:("Spherical"|"Lopsided"),coefficients_]/;up>=1]:=
GPA4Element[g,Rest[over]~Join~{over[[2]]},{down+1,up-1},pivotalStructure,
coefficients/.({a_Vertex,na_Integer,b_Vertex,nb_Integer,B___}->\[Zeta]_):>({b,nb,B,a,na}->\[Zeta] CriticalPointCoefficient[g,-1,b,a,pivotalStructure])]


(*RotateOneClick is the WRONG rotation by QuadraticTangles standards. It moves the external star clockwise. *)
RotateOneClick[k:GPA4Element[g:{_BigraphWithDuals,_BigraphWithDuals},over:{({0,0}|{0,1}|{1,1}|{1,0})...},{down_Integer,up_Integer},pivotalStructure:("Spherical"|"Lopsided"),coefficients_]/;up>=1]:=TurnUpBottomRightCorner[TurnDownTopLeftCorner[k]]


RotateOneClick[k:GPA4Element[g:{_BigraphWithDuals,_BigraphWithDuals},over:{({0,0}|{0,1}|{1,1}|{1,0})...},{down_Integer,0},pivotalStructure:("Spherical"|"Lopsided"),coefficients_]/;down>=1]:=TurnDownTopLeftCorner[TurnUpBottomRightCorner[k]]


(*Also rotates the wrong way.*)
RotateTwoClicks[k_GPA4Element]:=RotateOneClick[RotateOneClick[k]]


(*GPAFourierTranform is the other one click rotation (the right one that rotates counterclockwise *)
GPAFourierTransform[k:GPA4Element[g:{_BigraphWithDuals,_BigraphWithDuals},over:{({0,0}|{0,1}|{1,1}|{1,0})...},{down_Integer,up_Integer},pivotalStructure:("Spherical"|"Lopsided"),coefficients_]/;up>=1]:=TurnUpBottomLeftCorner[TurnDownTopRightCorner[k]]
GPAFourierTransform[k:GPA4Element[g:{_BigraphWithDuals,_BigraphWithDuals},over:{({0,0}|{0,1}|{1,1}|{1,0})...},{down_Integer,0},pivotalStructure:("Spherical"|"Lopsided"),coefficients_]/;down>=1]:=TurnDownTopRightCorner[TurnUpBottomLeftCorner[k]]


GPAFourierTransformTwice[k_GPA4Element]:=GPAFourierTransform[GPAFourierTransform[k]]


AddStrandOnRight[GPA4Element[g:{_BigraphWithDuals,_BigraphWithDuals},over:{({0,0}|{0,1}|{1,1}|{1,0})...},{down_Integer,up_Integer},pivotalStructure:("Spherical"|"Lopsided"),coefficients_],newOver:{0,0}|{0,1}|{1,1}|{1,0}]:=Module[{dispatch},
dispatch=Dispatch[coefficients~Join~{otherLoopsZero[down+up]}];
ExpandCoefficientRules[GPA4Element[g,Take[over,up+1]~Join~{newOver}~Join~Drop[over,up],{down+1,up+1},pivotalStructure,
Switch[{down,up},
{0,0},{{a_Vertex,na_Integer,b_Vertex,na_Integer}:>({a}/.dispatch)},
{0,up},{{a_Vertex,nc_Integer,A:RepeatedSequence[_Vertex,_Integer,{up-1}],a_Vertex,na_Integer,b_Vertex,na_Integer}:>({a,nc,A}/.dispatch)},
{down,up},{{A:RepeatedSequence[_Vertex,_Integer,{up}],a_Vertex,na_Integer,b_Vertex,na_Integer,a_Vertex,nc_Integer,B:RepeatedSequence[_Vertex,_Integer,{down-1}]}:>({A,a,nc,B}/.dispatch)}
]
]]
]


AddStrandsOnLeft[GPA4Element[g:{_BigraphWithDuals,_BigraphWithDuals},over:{({0,0}|{0,1}|{1,1}|{1,0})...},{down_Integer,up_Integer},pivotalStructure:("Spherical"|"Lopsided"),coefficients_],newOvers:{({0,0}|{0,1}|{1,1}|{1,0})..}]:=Module[{dispatch,k},
k=Length[newOvers];
dispatch=Dispatch[coefficients~Join~{otherLoopsZero[down+up]}];
ExpandCoefficientRules[GPA4Element[g,newOvers~Join~over~Join~Reverse[newOvers],{down+k,up+k},pivotalStructure,
{{A:RepeatedSequence[_Vertex,_Integer,{k}],B:RepeatedSequence[_Vertex,_Integer,{up+down+1}],C:RepeatedSequence[_Vertex,_Integer,{k-1}]}/;({A}~Join~{{B}[[1]]}===Reverse[Take[{B},-2]~Join~{C}~Join~{{A}[[1]]}]):>(If[up+down==0,{{B}[[1]]},Drop[{B},-2]]/.dispatch)}
]]]


AddStrandsOnLeft[A_GPA4Element,{}]:=A


AddStrandOnRight[A_GPA4Matrix,over_]:=GPA4Matrix[AddStrandOnRight[GPA4Element[A],over]]


Clear[GPAMultiply]


GPAMultiply[GPA4Element[g:{_BigraphWithDuals,_BigraphWithDuals},overBelow:{({0,0}|{0,1}|{1,1}|{1,0})...},{down_Integer,middle_Integer},pivotalStructure:("Spherical"|"Lopsided"),coefficients1_],GPA4Element[g:{_BigraphWithDuals,_BigraphWithDuals},overAbove:{({0,0}|{0,1}|{1,1}|{1,0})...},{middle_Integer,up_Integer},pivotalStructure:("Spherical"|"Lopsided"),coefficients2_]]/;Take[overBelow,middle+1]==Reverse[Take[overAbove,-middle-1]]:=
Module[{dispatch1,dispatch2,expand},
expand=If[!(MemberQ[coefficients1,{Except[Vertex[_,_,0,1]],___}->_]\[And]MemberQ[coefficients2,{Except[Vertex[_,_,0,1]],___}->_]),
ExpandCoefficientRulesAtStar,
ExpandCoefficientRules];
dispatch1=Dispatch[coefficients1~Join~{otherLoopsZero[down+middle]}];
dispatch2=Dispatch[coefficients2~Join~{otherLoopsZero[middle+up]}];
ExpandCoefficientRules[
GPA4Element[g,Take[overAbove,up+1]~Join~Take[overBelow,-down],{down,up},pivotalStructure,
Switch[{down,middle,up},
{0,middle,0},{{V_Vertex}:>Plus@@((#/.dispatch2)(Reverse[#]/.dispatch1)&/@GraphPathsBetween[g,V,V,Take[overAbove,-middle-1]])},
{0,0,up},{{A:RepeatedSequence[_Vertex,_Integer,{up}]}:>Plus@@(({A}/.dispatch2)(#/.dispatch1)&/@GraphPathsBetween[g,{A}[[1]],{A}[[1]],Take[overAbove,-1]])},
{down,0,0},{{B:RepeatedSequence[_Vertex,_Integer,{down}]}:>Plus@@((#/.dispatch2)({B}/.dispatch1)&/@GraphPathsBetween[g,{B}[[1]],{B}[[1]],Take[overAbove,-1]])},
{down,middle,up},{{A:RepeatedSequence[_Vertex,_Integer,{up}],B:RepeatedSequence[_Vertex,_Integer,{down}]}:>Plus@@(({A}~Join~Most[#]/.dispatch2)(Most[Reverse[#]]~Join~{B}/.dispatch1)&/@GraphPathsBetween[g,{B,A}[[1]],{A,B}[[1]],Take[overAbove,-middle-1]])}
]
]
]
]


GPAMultiply[x_,y_,Z__]:=GPAMultiply[GPAMultiply[x,y],Z]


GPAConjugate[GPA4Element[g:{_BigraphWithDuals,_BigraphWithDuals},overs:{({0,0}|{0,1}|{1,1}|{1,0})...},{down_Integer,up_Integer},pivotalStructure:"Lopsided",coefficients_]]:=GPA4Element[g,Reverse[overs],{up,down},pivotalStructure,coefficients/.(a_->b_):>(ReverseLoop[a]->(If[down>=2,Times@@(Power[LopsidedDimension[g,#],-1]&/@a[[3;;2down-1;;2]]),1])(If[up>=2,Times@@(LopsidedDimension[g,#]&/@a[[-2;;2-2up;;-2]]),1])conjugate[b])]


GPAConjugate[GPA4Element[g:{_BigraphWithDuals,_BigraphWithDuals},overs:{({0,0}|{0,1}|{1,1}|{1,0})...},{down_Integer,up_Integer},pivotalStructure:"Spherical",coefficients_]]:=GPA4Element[g,Reverse[overs],{up,down},pivotalStructure,coefficients/.(a_->b_):>(ReverseLoop[a]->conjugate[b])]


GPAConjugate[A_GPA4Matrix]:=GPA4Matrix[GPAConjugate[GPA4Element[A]]]


Clear[conjugate]


conjugate[a_Times]:=conjugate/@a
conjugate[b_Plus]:=conjugate/@b
conjugate[Exp[x_]]:=Exp[conjugate[x]]
conjugate[x_^y_Integer]:=conjugate[x]^y
conjugate[1/x_]:=1/conjugate[x]
conjugate[x_AlgebraicNumber]:=ToNumberField[Conjugate[x],x[[1]]]
conjugate[x_?NumericQ]:=Conjugate[x]


conjugate[conjugate[x_]]:=x


GaugeTransform[GPA4Element[g_,over_,{down_,up_},pivotalStructure:("Spherical"|"Lopsided"),values_],\[Mu]_]:=GPA4Element[g,over,{down,up},pivotalStructure,values/.(path_->coefficient_):>(path->(Times@@((\[Mu]@@#)&/@Partition[path~Join~{First[path]},3,2]))coefficient)]


GPA4Element/:z_ GPA4Element[g:{_BigraphWithDuals,_BigraphWithDuals},over:{({0,0}|{0,1}|{1,1}|{1,0})...},{down_Integer,up_Integer},pivotalStructure:("Spherical"|"Lopsided"),coefficients_List]:=GPA4Element[g,over,{down,up},pivotalStructure,coefficients/.(loop_List->\[Zeta]_):>(loop->z \[Zeta])]


GPA4Element/:GPA4Element[g:{_BigraphWithDuals,_BigraphWithDuals},over:{({0,0}|{0,1}|{1,1}|{1,0})...},{down_Integer,up_Integer},pivotalStructure:("Spherical"|"Lopsided"),coefficients1_List]+GPA4Element[g:{_BigraphWithDuals,_BigraphWithDuals},over:{({0,0}|{0,1}|{1,1}|{1,0})...},{down_Integer,up_Integer},pivotalStructure:("Spherical"|"Lopsided"),coefficients2_List]:=
With[{dispatch1=Dispatch[coefficients1~Join~{otherLoopsZero[up+down]}],dispatch2=Dispatch[coefficients2~Join~{otherLoopsZero[up+down]}],loops=Union[First/@coefficients1,First/@coefficients2]},
GPA4Element[g,over,{down,up},pivotalStructure,Thread[loops->(loops/.dispatch1)+(loops/.dispatch2)]]
]


ExpandCoefficientRules[GPA4Element[g:{_BigraphWithDuals,_BigraphWithDuals},over:{({0,0}|{0,1}|{1,1}|{1,0})...},{down_Integer,up_Integer},pivotalStructure:("Spherical"|"Lopsided"),coefficients_List]]:=Module[{result},
expansionCounter=0;
DebugPrint[".... expanding coefficients (",Length[GraphLoops[g,over]],")"];
result=GPA4Element[g,over,{down,up},pivotalStructure,
DeleteCases[(If[Mod[++expansionCounter,10000]==0,DebugPrint[expansionCounter]];#->Replace[(#/.coefficients),_List->0])&/@GraphLoops[g,over],_->0]];
DebugPrint[".... finished expanding coefficients"];
result
]


ExpandCoefficientRulesAtStar[GPA4Element[g:{_BigraphWithDuals,_BigraphWithDuals},over:{({0,0}|{0,1}|{1,1}|{1,0})...},{down_Integer,up_Integer},pivotalStructure:("Spherical"|"Lopsided"),coefficients_List]]:=Module[{result,loopsAtStar},
loopsAtStar=Select[GraphLoops[g,over],#[[1]]==Vertex[0,0,0,1]&];
expansionCounter=0;
DebugPrint[".... expanding coefficients (",Length[loopsAtStar],")"];
result=GPA4Element[g,over,{down,up},pivotalStructure,
DeleteCases[(If[Mod[++expansionCounter,10000]==0,DebugPrint[expansionCounter]];#->Replace[(#/.coefficients),_List->0])&/@loopsAtStar,_->0]];
DebugPrint[".... finished expanding coefficients"];
result
]


GPACoefficients[GPA4Element[g:{_BigraphWithDuals,_BigraphWithDuals},over:{({0,0}|{0,1}|{1,1}|{1,0})...},{down_Integer,up_Integer},pivotalStructure:("Spherical"|"Lopsided"),coefficients_List]]:=GraphLoops[g,over]/.Dispatch[coefficients~Join~{otherLoopsZero[up+down]}]


GPACoefficientsAtStar[X:GPA4Element[G_,overs_,updown_,ps_,rules_]]/;overs[[1]]=={0,0}:=Module[{loops},
loops=Select[GraphLoops[G,overs],#[[1]]==Vertex[0,0,0,1]&];
loops/.X[[5]]/.{{_Vertex,__}->0}
]


GPACoefficients[A:GPA4Matrix[xx__,matrices_]]:=GPACoefficients[GPA4Element[A]]


VariableGPA4Element[g:{_BigraphWithDuals,_BigraphWithDuals},over:{({0,0}|{0,1}|{1,1}|{1,0})...},{0,0},pivotalStructure:("Spherical"|"Lopsided"),f_]:=
ExpandCoefficientRules[GPA4Element[g,over,{0,0},pivotalStructure,{loop:{_Vertex}:>f[loop]}]]


VariableGPA4Element[g:{_BigraphWithDuals,_BigraphWithDuals},over:{({0,0}|{0,1}|{1,1}|{1,0})...},{down_Integer,up_Integer},pivotalStructure:("Spherical"|"Lopsided"),f_]/;up+down>=2:=
ExpandCoefficientRules[GPA4Element[g,over,{down,up},pivotalStructure,{loop:{PatternSequence[_Vertex,_Integer]..}:>f[loop]}]]


GPA4Matrix[GPA4Element[g:{_BigraphWithDuals,_BigraphWithDuals},over:{({0,0}|{0,1}|{1,1}|{1,0})...},{down_Integer,up_Integer},pivotalStructure:("Spherical"|"Lopsided"),values_]]:=
Module[{initialVertices,finalVertices,pathsList,matrices,coefficients},
coefficients=(values~Join~{otherLoopsZero[up+down]});
initialVertices=GraphVertices[g,over[[1]]];
finalVertices=GraphVertices[g,over[[up+1]]];
pathsList=DeleteCases[Flatten[Outer[{{#1,#2},GraphPathsBetween[g,#1,#2,Take[over,up+1]],GraphPathsBetween[g,#1,#2,Reverse[Take[over,-down-1]]]}&,initialVertices,finalVertices],1],{{_Vertex,_Vertex},{},{}}];
matrices=pathsList/.{{initial_Vertex,final_Vertex},upPaths_List,downPaths_List}:>({initial,final}->(Outer[GraphPathToGraphLoop[ConcatenatePaths[#1,Reverse[#2]]](*#1~Join~Most[Reverse[Most[#2]]]*)&,upPaths,downPaths,1]/.coefficients));
GPA4Matrix[g,over,{down,up},pivotalStructure,matrices]
]


GraphPathToGraphLoop[{v_Vertex}]:={v}
GraphPathToGraphLoop[{v_Vertex,o___,v_Vertex}]:={v,o}


GPA4Matrix/:GPA4Matrix[g:{_BigraphWithDuals,_BigraphWithDuals},overBelow:{({0,0}|{0,1}|{1,1}|{1,0})...},{down_Integer,middle_Integer},pivotalStructure:("Spherical"|"Lopsided"),values1_].GPA4Matrix[g:{_BigraphWithDuals,_BigraphWithDuals},overAbove:{({0,0}|{0,1}|{1,1}|{1,0})...},{middle_Integer,up_Integer},pivotalStructure:("Spherical"|"Lopsided"),values2_]:=
GPA4Matrix[g,Take[overAbove,up]~Join~Take[overBelow,-down-1],{down,up},pivotalStructure,(#[[1,1]]->#[[2,2]].#[[1,2]])&/@Transpose[{values1,values2}]]


GPA4Matrix/:GPA4Matrix[g:{_BigraphWithDuals,_BigraphWithDuals},over:{({0,0}|{0,1}|{1,1}|{1,0})...},{down_Integer,up_Integer},pivotalStructure:("Spherical"|"Lopsided"),values1_]+GPA4Matrix[g:{_BigraphWithDuals,_BigraphWithDuals},over:{({0,0}|{0,1}|{1,1}|{1,0})...},{down_Integer,up_Integer},pivotalStructure:("Spherical"|"Lopsided"),values2_]:=
GPA4Matrix[g,over,{down,up},pivotalStructure,(#[[1,1]]->#[[2,2]]+#[[1,2]])&/@Transpose[{values1,values2}]]


GPA4Matrix/:\[Alpha]_ GPA4Matrix[g:{_BigraphWithDuals,_BigraphWithDuals},over:{({0,0}|{0,1}|{1,1}|{1,0})...},{down_Integer,up_Integer},pivotalStructure:("Spherical"|"Lopsided"),values_]:=
GPA4Matrix[g,over,{down,up},pivotalStructure,(#[[1]]->\[Alpha] #[[2]])&/@values]


AddStrandOnRight[m_GPA4Matrix,newOver_]:=GPA4Matrix[AddStrandOnRight[GPA4Element[m],newOver]]


GPA4Element[GPA4Matrix[g:{_BigraphWithDuals,_BigraphWithDuals},over:{({0,0}|{0,1}|{1,1}|{1,0})...},{down_,up_},pivotalStructure:("Spherical"|"Lopsided"),values_]]:=
GPA4Element[g,over,{down,up},pivotalStructure,DeleteCases[Flatten[values/.({initial_Vertex,final_Vertex}->matrix_):>
With[{
downPaths=GraphPathsBetween[g,initial,final,Reverse[Take[over,-down-1]]],
upPaths=GraphPathsBetween[g,initial,final,Take[over,up+1]]
},
If[Length[downPaths]==0\[Or]Length[upPaths]==0,{},
MapThread[Rule,{Outer[GraphPathToGraphLoop[ConcatenatePaths[#1,Reverse[#2]]]&,upPaths,downPaths,1],matrix},2]]
]
],_->0]]


GPAMultiply[GPA4Matrix[g:{_BigraphWithDuals,_BigraphWithDuals},overBelow:{({0,0}|{0,1}|{1,1}|{1,0})...},{down_Integer,middle_Integer},pivotalStructure:("Spherical"|"Lopsided"),matrices1_],GPA4Matrix[g:{_BigraphWithDuals,_BigraphWithDuals},overAbove:{({0,0}|{0,1}|{1,1}|{1,0})...},{middle_Integer,up_Integer},pivotalStructure:("Spherical"|"Lopsided"),matrices2_]]/;Take[overBelow,middle+1]==Reverse[Take[overAbove,-middle-1]]:=
GPA4Matrix[g,Take[overAbove,up+1]~Join~Take[overBelow,-down],{down,up},pivotalStructure,
matrices1[[All,1]]/.{p:{_Vertex,_Vertex}:>(If[Length[p/.matrices1]>10,DebugPrint["multiplying matrices: ",p,", size: ",Length[p/.matrices1]]];(p->(p/.matrices1).(p/.matrices2)))}
]


TurnDownTopLeftCorner[m_GPA4Matrix]:=GPA4Matrix[TurnDownTopLeftCorner[GPA4Element[m]]]
TurnDownTopRightCorner[m_GPA4Matrix]:=GPA4Matrix[TurnDownTopRightCorner[GPA4Element[m]]]
TurnUpBottomLeftCorner[m_GPA4Matrix]:=GPA4Matrix[TurnUpBottomLeftCorner[GPA4Element[m]]]
TurnUpBottomRightCorner[m_GPA4Matrix]:=GPA4Matrix[TurnUpBottomRightCorner[GPA4Element[m]]]


RotateOneClick[m_GPA4Matrix]:=GPA4Matrix[RotateOneClick[GPA4Element[m]]]
GPAFourierTransform[m_GPA4Matrix]:=GPA4Matrix[GPAFourierTransform[GPA4Element[m]]]


PartialTrace[m_GPA4Matrix]:=GPA4Matrix[PartialTrace[GPA4Element[m]]]
GPA4Trace[m_GPA4Matrix]:=GPA4Trace[GPA4Element[m]]
GPA4TraceEvaluation[m_GPA4Matrix]:=GPA4TraceEvaluation[GPA4Element[m]]


GPA4Element[G:{BigraphWithDuals[g_GradedBigraph,_DualData],_BigraphWithDuals},GPAElement[g_,False,{down_,up_},coefficients_]]/;PivotalStructure=="Lopsided":=Module[{bump},
bump[Vertex[i_,j_]]:=Vertex[0,Mod[i,2],i,j];
bump[l_List]:=bump/@l;
bump[i_Integer]:=i;
GPA4Element[G,Flatten[Table[{{0,0},{0,1}},{(up+down)/2}],1]~Join~{{0,0}},{down,up},"Lopsided",coefficients/.(x_->y_):>(bump[x]->y)]
]


GPATensor[A:GPA4Element[g:{_BigraphWithDuals,_BigraphWithDuals},over1_,{down1_Integer,up1_Integer},pivotalStructure:("Spherical"|"Lopsided"),coefficients1_],B:GPA4Element[g:{_BigraphWithDuals,_BigraphWithDuals},over2_,{down2_Integer,up2_Integer},pivotalStructure:("Spherical"|"Lopsided"),coefficients2_]]/;over1[[up1+1]]==over2[[1]]:=TurnUpBottomRightCorner[TurnDownTopLeftCorner[GPAMultiply[TurnDownTopRightCorner[B,up2],TurnUpBottomLeftCorner[A,down1]],down1],up2]


GPAInverse[A:GPA4Matrix[g:{_BigraphWithDuals,_BigraphWithDuals},over_,{k_,k_},pivotalStructure:("Spherical"|"Lopsided"),matrices_]]:=GPA4Matrix[g,Reverse[over],{k,k},pivotalStructure,matrices/.(p_->m_):>(p->Inverse[m])]


GPAInverse[A_GPA4Element]:=GPA4Element[GPAInverse[GPA4Matrix[A]]]


Rotate\[Pi]Clockwise[A:GPA4Element[g:{_BigraphWithDuals,_BigraphWithDuals},over:{({0,0}|{0,1}|{1,1}|{1,0})...},{down_Integer,up_Integer},pivotalStructure:("Spherical"|"Lopsided"),coefficients_]]:=TurnDownTopRightCorner[TurnUpBottomLeftCorner[A,down],up]


Rotate\[Pi]Counterclockwise[A:GPA4Element[g:{_BigraphWithDuals,_BigraphWithDuals},over:{({0,0}|{0,1}|{1,1}|{1,0})...},{down_Integer,up_Integer},pivotalStructure:("Spherical"|"Lopsided"),coefficients_]]:=TurnDownTopLeftCorner[TurnUpBottomRightCorner[A,down],up]


TurnDownTopRightCorner[X_,k_]/;k>=0:=Nest[TurnDownTopRightCorner,X, k]
TurnDownTopRightCorner[X_,k_]/;k<0:=Nest[TurnUpBottomRightCorner,X, -k]
TurnDownTopLeftCorner[X_,k_]/;k>=0:=Nest[TurnDownTopLeftCorner,X, k]
TurnDownTopLeftCorner[X_,k_]/;k<0:=Nest[TurnUpBottomLeftCorner,X, -k]
TurnUpBottomRightCorner[X_,k_]/;k>=0:=Nest[TurnUpBottomRightCorner,X, k]
TurnUpBottomRightCorner[X_,k_]/;k<0:=Nest[TurnDownTopRightCorner,X, -k]
TurnUpBottomLeftCorner[X_,k_]/;k>=0:=Nest[TurnUpBottomLeftCorner,X, k]
TurnUpBottomLeftCorner[X_,k_]/;k<0:=Nest[TurnDownTopLeftCorner,X, -k]


Clear[GPAMultiplyWithOffset]


(* Positive k shifts the lower factor to the right *)


GPAMultiplyWithOffset[lower:GPA4Element[g_,_,{down1_,up1_},pivotalStructure:("Spherical"|"Lopsided"),_],upper:GPA4Element[g_,_,{down2_,up2_},pivotalStructure:("Spherical"|"Lopsided"),_],k_]/;k>=0\[And]k+up1>=down2:=GPAMultiplyWithOffset[lower,upper,k]=Module[{result},
DebugPrint["beginning GPAMultiplyWithOffset"];
result=TurnDownTopLeftCorner[TurnUpBottomRightCorner[GPAMultiply[TurnDownTopRightCorner[lower,k+up1-down2],TurnUpBottomLeftCorner[upper,k]],k+up1-down2],k];
DebugPrint["finished GPAMultiplyWithOffset"];
result
]


GPAMultiplyWithOffset[lower:GPA4Element[g_,_,{down1_,up1_},pivotalStructure:("Spherical"|"Lopsided"),_],upper:GPA4Element[g_,_,{down2_,up2_},pivotalStructure:("Spherical"|"Lopsided"),_],k_]/;k>=0\[And]k+up1<down2:=GPAMultiplyWithOffset[lower,upper,k]=Module[{result},
DebugPrint["beginning GPAMultiplyWithOffset"];
result=TurnDownTopLeftCorner[TurnDownTopRightCorner[GPAMultiply[lower,TurnUpBottomRightCorner[TurnUpBottomLeftCorner[upper,k],down2-k-up1]],down2-k-up1],k];
DebugPrint["finished GPAMultiplyWithOffset"];
result
]


GPAMultiplyWithOffset[lower:GPA4Element[g_,_,{down1_,up1_},pivotalStructure:("Spherical"|"Lopsided"),_],upper:GPA4Element[g_,_,{down2_,up2_},pivotalStructure:("Spherical"|"Lopsided"),_],k_]/;k<0\[And]-k+down2>=up1:=GPAMultiplyWithOffset[lower,upper,k]=Module[{result},
DebugPrint["beginning GPAMultiplyWithOffset"];
result=TurnDownTopRightCorner[TurnUpBottomLeftCorner[GPAMultiply[TurnDownTopLeftCorner[lower,-k],TurnUpBottomRightCorner[upper,-k+down2-up1]],-k],-k+down2-up1];
DebugPrint["finished GPAMultiplyWithOffset"];
result
]


GPAMultiplyWithOffset[lower:GPA4Element[g_,_,{down1_,up1_},pivotalStructure:("Spherical"|"Lopsided"),_],upper:GPA4Element[g_,_,{down2_,up2_},pivotalStructure:("Spherical"|"Lopsided"),_],k_]/;k<0\[And]-k+down2<up1:=GPAMultiplyWithOffset[lower,upper,k]=Module[{result},
DebugPrint["beginning GPAMultiplyWithOffset"];
result=TurnUpBottomRightCorner[TurnUpBottomLeftCorner[GPAMultiply[TurnDownTopRightCorner[TurnDownTopLeftCorner[lower,-k],up1+k-down2],upper],-k],up1+k-down2];
DebugPrint["finished GPAMultiplyWithOffset"];
result
]


simplifyCoefficients[x_,pivotalStructure:("Spherical"|"Lopsided")]:=Switch[pivotalStructure,"Spherical",RootReduce[x],"Lopsided",If[MatchQ[x,_AlgebraicNumber|_Integer|_Rational|_Real],x,Print["Panic --- not an AlgebraicNumber: ",x];Abort[]]]


Clear[ConnectionGrid]


ss[{0,0}]={0,1};ss[{0,1}]={1,1};ss[{1,1}]={1,0};ss[{1,0}]={0,0};
pp[{0,0}]={1,0};pp[{1,0}]={1,1};pp[{1,1}]={0,1};pp[{0,1}]={0,0};


PivotalStructure[GPA4Element[g:{_BigraphWithDuals,_BigraphWithDuals},over:{({0,0}|{0,1}|{1,1}|{1,0})...},{down_Integer,up_Integer},pivotalStructure:("Spherical"|"Lopsided"),coefficients_]]:=pivotalStructure


ConnectionGrid[conn_][1,1,{0,0},1]:=conn
ConnectionGrid[conn_][1,1,{0,0},-1]:=If[PivotalStructure[conn]=="Spherical",GPAConjugate[conn],GPAInverse[conn]]


ConnectionGrid[conn_][1,1,start_,orientation_]:=ConnectionGrid[conn][1,1,start,orientation]=TurnUpBottomRightCorner[TurnDownTopLeftCorner[ConnectionGrid[conn][1,1,Switch[orientation,1,pp,-1,ss][start],orientation]]]/.(x_->y_):>(x->simplifyCoefficients[y,PivotalStructure[conn]])


ConnectionGrid[conn_][1,k_,start_,orientation_]/;k>=2:=ConnectionGrid[conn][1,k,start,orientation]=Module[{},
DebugPrint["Computing ConnectionGrid for 1, ",k, ", ",start,", ",orientation];
GPAMultiplyWithOffset[ConnectionGrid[conn][1,1,Switch[{Mod[k,2],orientation},{1,_},start,{0,1},pp[start],{0,-1},ss[start]],(-1)^(k-1) orientation],ConnectionGrid[conn][1,k-1,start,orientation],k-1]/.(x_->y_):>(x->simplifyCoefficients[y,PivotalStructure[conn]])
]


ConnectionGrid[conn_][j_,k_,start_,orientation_]/;j>=2:=ConnectionGrid[conn][j,k,start,orientation]=Module[{},
simplifyCounter=0;
DebugPrint["Computing ConnectionGrid for ",j, ", ",k, ", ",start,", ",orientation];
GPAMultiplyWithOffset[ConnectionGrid[conn][j-1,k,start,orientation],ConnectionGrid[conn][1,k,Switch[{Mod[j,2],orientation},{1,_},start,{0,1},ss[start],{0,-1},pp[start]],orientation (-1)^(j-1)],1-j](*/.(x_\[Rule]y_)\[RuleDelayed](Print[x\[Rule]y];simplifyCounter++;x\[Rule]simplifyCoefficients[y,PivotalStructure[conn]])*)
]


Clear[StrandCrossingAbove]


StrandCrossingAbove[conn_][A:GPA4Element[g:{_BigraphWithDuals,_BigraphWithDuals},over:{({0,0}|{0,1}|{1,1}|{1,0})},{0,0},pivotalStructure:("Spherical"|"Lopsided"),coefficients_]]:=Module[{newOver=over[[1]]/.{{0,0}->{1,0},{0,1}->{1,1},{1,1}->{0,1},{1,0}->{0,0}}},
AddStrandOnRight[A,newOver]
]


StrandCrossingAbove[conn_][A:GPA4Element[g:{_BigraphWithDuals,_BigraphWithDuals},over:{({0,0}|{0,1}|{1,1}|{1,0})...},{down_Integer,0},pivotalStructure:("Spherical"|"Lopsided"),coefficients_]]:=Module[{newOver=ss[ss[over[[2]]]]},
AddStrandOnRight[A,newOver]
]


StrandCrossingAbove[conn_][A:GPA4Element[g:{_BigraphWithDuals,_BigraphWithDuals},over:{({0,0}|{0,1}|{1,1}|{1,0})...},{down_Integer,up_Integer},pivotalStructure:("Spherical"|"Lopsided"),coefficients_]]/;up>=1:=Module[{firstOrientation,newOver,strandOnRight,connections,offsets},
DebugPrint["Starting StrandCrossingAbove on ",Append[Most[A],"..."]];
firstOrientation=If[ss[over[[up+1]]]==over[[up]],1,-1];
newOver=If[firstOrientation==1,pp[over[[up+1]]],ss[over[[up+1]]]];
DebugPrint[firstOrientation];
DebugPrint[newOver];
strandOnRight=AddStrandOnRight[A,newOver];
connections=Table[ConnectionGrid[conn][1,1,over[[k]],firstOrientation Power[-1,k-up]],{k,up,1,-1}];
offsets=Range[-(up-1),0,1];
DebugPrint[Most[strandOnRight]];
DebugPrint[Most/@connections];
Fold[GPAMultiplyWithOffset[#1,#2[[1]],#2[[2]]]&,strandOnRight,Transpose[{connections, offsets}]]
]


StrandCrossingBelow[conn_][A:GPA4Element[g:{_BigraphWithDuals,_BigraphWithDuals},over:{({0,0}|{0,1}|{1,1}|{1,0})...},{down_Integer,up_Integer},pivotalStructure:("Spherical"|"Lopsided"),coefficients_]]:=Rotate\[Pi]Counterclockwise[StrandCrossingAbove[conn][Rotate\[Pi]Clockwise[A]]]


(*This bad implementation prepares a giant grid first *)
(*Flatness[conn_][A:GPA4Element[g:{_BigraphWithDuals,_BigraphWithDuals},over:{{0,0},({0,0}|{0,1})..},{0,up_Integer},pivotalStructure:("Spherical"|"Lopsided"),coefficients_]]:=
GPAMultiply[A,TurnUpBottomRightCorner[TurnUpBottomRightCorner[ConnectionGrid[conn][2,up,{0,0},-1]]]]- TurnUpBottomLeftCorner[TurnUpBottomLeftCorner[AddStrandOnRight[AddStrandOnRight[A,{1,0}],{0,0}]]]*)


(* FIXME: replace the constants passed to AddStrandOnRight. *)


TwoStrandFlatness[conn_][A:GPA4Element[g:{_BigraphWithDuals,_BigraphWithDuals},over:{{0,0},({0,0}|{0,1})..},{0,up_Integer},pivotalStructure:("Spherical"|"Lopsided"),coefficients_]]:=
TurnUpBottomLeftCorner[StrandCrossingAbove[conn][TurnDownTopLeftCorner[StrandCrossingAbove[conn][A]]]]- TurnUpBottomLeftCorner[TurnDownTopRightCorner[AddStrandOnRight[AddStrandOnRight[A,{1,0}],{0,0}],2],2]


OneStrandFlatness[conn_][A_GPA4Element,B_GPA4Element]:=
StrandCrossingAbove[conn][A]-StrandCrossingBelow[conn][B]


Clear[FusionRulesFromConnection]


FusionRulesFromConnection[G_,conn_][a_Vertex,b_Vertex,c_Vertex]/;(a[[2]]==b[[1]]\[And]a[[1]]==c[[1]]\[And]b[[2]]==c[[2]]):=
Module[{star,starover,overa,overb,overac,overbc,pa,pb,psac,psbc,grid1,grid2,loops},
starover={a[[2]],a[[2]]};
star=Vertex[Sequence@@starover,0,1];
overa=Table[Mod[starover+{k,0},2],{k,0,a[[3]]}];
pa=GraphPathsBetween[G,star,a,overa][[1]];
overb=Table[Mod[starover+{0,k},2],{k,0,b[[3]]}];
pb=GraphPathsBetween[G,star,b,overb][[1]];
overac=Table[Mod[{a[[1]],a[[2]]}+{0,k},2],{k,0,b[[3]]}];
psac=GraphPathsBetween[G,a,c,overac];
If[Length[psac]==0,Return[0]];
overbc=Table[Mod[{b[[1]],b[[2]]}+{k,0},2],{k,0,a[[3]]}];
psbc=GraphPathsBetween[G,b,c,overbc];
If[Length[psbc]==0,Return[0]];
grid1=ConnectionGrid[conn][PathLength[pa],PathLength[pb],starover,-1];
grid2=ConnectionGrid[conn][PathLength[pb],PathLength[pa],starover,1];
DebugPrint["Finished preparing connection grids."];
loops=Flatten[Outer[Most[ConcatenatePaths[pa,#1,Reverse[#2],Reverse[pb]]]&,psac,psbc,1],1];
DebugPrint[Length[loops]," loops to evaluate"];
Plus@@((#/.grid1[[-1]])(ReverseLoop[#]/.grid2[[-1]])&/@loops)
]


SolveTwoTermEquations[conditions_,variablePattern_,variablePreferenceFunction_:(#&)]:=
Module[{constantConditions,oneVariableConditions,twoVariableConditions,sortedConditions,condition,targetVariable,solutions},
sortedConditions=conditions;
While[
DebugPrint["... sorting conditions"];
{constantConditions,oneVariableConditions,twoVariableConditions,sortedConditions}=Flatten/@Reap[Sow[#,Length[Union[Cases[#,variablePattern,{0,\[Infinity]}]]]/.n_/;n>=3:>\[Infinity]]&/@sortedConditions,{0,1,2,\[Infinity]}][[2]];

If[Length[DeleteCases[constantConditions,0]]>0,
DebugPrint["... no solution! This should be impossible; 0 always works."];
DebugPrint[constantConditions]
];
DebugPrint["... found ",Length[oneVariableConditions]," and ", Length[twoVariableConditions]," one- and two-variable conditions."];
Length[oneVariableConditions]+Length[twoVariableConditions]>0,
Cases[Collect[oneVariableConditions,variablePattern,RootReduce[Together[#]]&],x:variablePattern:>(x=0),\[Infinity]];
(condition=Collect[#,variablePattern,Together];
If[condition=!=0,
targetVariable=First[SortBy[Cases[condition,variablePattern,{0,\[Infinity]}],variablePreferenceFunction]];
solutions=Solve[condition==0,targetVariable];
If[Length[solutions]==1,
Collect[solutions[[1]],variablePattern,Together]/.(x_->y_):>(x=y),
Print["Something went wrong:",condition," ",solutions];
];
];)&/@twoVariableConditions;
];
sortedConditions
]


VertexPreferences[g_GradedBigraph][Vertex[i_,j_,d_,k_]]:=-LopsidedDimension[g,Vertex[i,j,d,k]]+0.1 k+0.01d


LoopPreferences[g_][loop_]:=Table[1.+.01k,{k,1,Length[loop]/2}].(VertexPreferences[g]/@loop[[;;;;2]])


LowestWeightEigenvectorConditions[k:GPA4Element[g:{_BigraphWithDuals,_BigraphWithDuals},over:{({0,0}|{0,1}|{1,1}|{1,0})...},{down_Integer,up_Integer},pivotalStructure:("Spherical"|"Lopsided"),values_],\[Lambda]0_]/;up>=2:=
Module[{\[Lambda]=If[NumericQ[\[Lambda]0],ToNumberField[RootReduce[\[Lambda]0],NumberFieldGenerator[k[[1]]]],\[Lambda]0]},
If[pivotalStructure=="Lopsided",EnlargeNumberField[k[[1]]][\[Lambda]]];
(DebugPrint["... preparing second cap"];GPACoefficients[CapTopLeft[RotateOneClick[k]]])
~Join~(DebugPrint["... preparing first cap"];GPACoefficients[CapTopLeft[k]])~Join~
(DebugPrint["... preparing rotation"];GPACoefficients[RotateTwoClicks[k]-\[Lambda] k])
]


LowestWeightEigenvectorConditions[k:GPA4Element[g:{_BigraphWithDuals,_BigraphWithDuals},over:{({0,0}|{0,1}|{1,1}|{1,0})...},{1,1},pivotalStructure:("Spherical"|"Lopsided"),values_],\[Lambda]0_]:=LowestWeightEigenvectorConditions[TurnUpBottomLeftCorner[k]]


LowestWeightEigenvectorConditions[k:GPA4Element[g:{_BigraphWithDuals,_BigraphWithDuals},over:{({0,0}|{0,1}|{1,1}|{1,0})...},{0,0},pivotalStructure:("Spherical"|"Lopsided"),values_],\[Lambda]0_]:={}


LowestWeightConditions[k:GPA4Element[g:{_BigraphWithDuals,_BigraphWithDuals},over:{({0,0}|{0,1}|{1,1}|{1,0})...},{down_Integer,up_Integer},pivotalStructure:("Spherical"|"Lopsided"),values_]]/;up>=2:=
Module[{},
Join@@(GPACoefficients[CapTopLeft[#]]&/@NestList[RotateOneClick,k,up+down-1])
]


LowestWeightConditions[k:GPA4Element[g:{_BigraphWithDuals,_BigraphWithDuals},over:{({0,0}|{0,1}|{1,1}|{1,0})...},{1,1},pivotalStructure:("Spherical"|"Lopsided"),values_]]:=LowestWeightConditions[TurnUpBottomLeftCorner[k]]


LowestWeightConditions[k:GPA4Element[g:{_BigraphWithDuals,_BigraphWithDuals},over:{({0,0}|{0,1}|{1,1}|{1,0})...},{0,0},pivotalStructure:("Spherical"|"Lopsided"),values_]]:={}


SparseMatrixSolve[conditions_,variablePattern_,variablePreferenceFunction_:(#&)]:=
Module[{variables=SortBy[Union[Cases[conditions,variablePattern,\[Infinity]]],variablePreferenceFunction],arrays,matrix,nullspace},
(*matrix=SparseArray[{i_,j_}\[RuleDelayed]Coefficient[conditions\[LeftDoubleBracket]i\[RightDoubleBracket],variables\[LeftDoubleBracket]j\[RightDoubleBracket]],{Length[conditions],Length[variables]}];*)
DebugPrint["preparing SparseArray"];
arrays=CoefficientArrays[conditions,variables];
matrix=If[Length[arrays]==2,arrays[[2]],{{}}];
DebugPrint["finding nullspace..."];
lastSparseMatrixSolveMatrix=matrix;
nullspace=NullSpace[matrix,Method->"OneStepRowReduction"];
(* prepare a list of rules *)
Thread[variables->#]&/@nullspace
]


ManyTermSparseMatrixSolve[conditions_,variablePattern_,variablePreferenceFunction_:(#&)]:=
SparseMatrixSolve[SolveTwoTermEquations[conditions,variablePattern,variablePreferenceFunction],variablePattern,variablePreferenceFunction]


CollectGPA4Matrix[GPA4Matrix[xx__,matrices_],p_]:=GPA4Matrix[xx,matrices/.((v_->m_):>(v->Collect[m,p,Together]))]
CollectGPA4Matrix[GPA4Matrix[xx__,matrices_],p_,f_]:=GPA4Matrix[xx,matrices/.((v_->m_):>(v->Collect[m,p,f]))]


CollectGPA4Element[GPA4Element[xx__,values_],p_]:=GPA4Element[xx,values/.((v_->m_):>(v->Collect[m,p,Together]))]
CollectGPA4Element[GPA4Element[xx__,values_],p_,f_]:=GPA4Element[xx,values/.((v_->m_):>(v->Collect[m,p,f]))]


Clear[LowestWeightEigenspace]


LowestWeightEigenspace[G:{_BigraphWithDuals,_BigraphWithDuals},pivotalStructure:("Spherical"|"Lopsided"),\[Lambda]_,t:(0|1):0]:=
If[LoadLowestWeightEigenspaces[G],LowestWeightEigenspace[G,pivotalStructure,\[Lambda],t],
Module[{result,f,over,kernel,conditions,solutions,variables,matrix,c,replacements,remainingf},
DebugPrint["Preparing test kernel..."];
over=Mod[Flatten[Table[{{0,0},{0,1}},{DepthOfBranchPoint[G[[1]]]+1}],1]~Join~{{0,0}}+t,2];
kernel=VariableGPA4Element[G,over,{DepthOfBranchPoint[G[[1]]]+1,DepthOfBranchPoint[G[[1]]]+1},pivotalStructure,f];
DebugPrint["Preparing low weight eigenspace conditions..."];
conditions=LowestWeightEigenvectorConditions[kernel,\[Lambda]];
DebugPrint["Beginning progressive solve..."];
solutions=ManyTermSparseMatrixSolve[conditions,_f,LoopPreferences[#[[1]]]&];
replacements=Thread[Union[Cases[solutions,_f,\[Infinity]]]->Table[c[i],{i,1,Length[solutions]}].(Union[Cases[solutions,_f,\[Infinity]]]/.solutions)];
matrix=GPA4Matrix[kernel]/.replacements;
matrix=CollectGPA4Matrix[matrix,_c];
If[!FreeQ[matrix,f],
DebugPrint["Oh dear --- the variable hasn't disappeared yet..."];
remainingf=Union[Cases[matrix,_f,\[Infinity]]];
matrix=matrix/.Thread[remainingf->Table[c[i],{i,Length[solutions]+1,Length[solutions]+Length[remainingf]}]];
DebugPrint["But now it's gone..."];
];
result=(LowestWeightEigenspace[G,pivotalStructure,\[Lambda],t]=Function[{cc},Evaluate[matrix/.c->cc]]);
DebugPrint["... finished LowestWeightEigenspace"];
PackageLowestWeightEigenspaces[G];
result
]
]


Clear[LowestWeightSpace]


LowestWeightSpace[G:{_BigraphWithDuals,_BigraphWithDuals},pivotalStructure:("Spherical"|"Lopsided"),n_Integer,t:(0|1):0]:=
If[LoadLowestWeightEigenspaces[G],LowestWeightSpace[G,pivotalStructure,n,t],
Module[{result,f,over,kernel,conditions,solutions,variables,matrix,c,replacements},
DebugPrint["Preparing test kernel..."];
over=Mod[Flatten[Table[{{0,0},{0,1}},{n}],1]~Join~{{0,0}}+t,2];
kernel=VariableGPA4Element[G,over,{n,n},pivotalStructure,f];
DebugPrint["Preparing low weight spacae conditions..."];
conditions=LowestWeightConditions[kernel];
DebugPrint["Beginning progressive solve..."];
solutions=ManyTermSparseMatrixSolve[conditions,_f,LoopPreferences[#[[1]]]&];
replacements=Thread[Union[Cases[solutions,_f,\[Infinity]]]->Table[c[i],{i,1,Length[solutions]}].(Union[Cases[solutions,_f,\[Infinity]]]/.solutions)];
matrix=GPA4Matrix[kernel]/.replacements;
matrix=CollectGPA4Matrix[matrix,_c];
If[!FreeQ[matrix,f],
DebugPrint["Oh dear --- the variable hasn't disappeared yet..."];
remainingf=Union[Cases[matrix,_f,\[Infinity]]];
matrix=matrix/.Thread[remainingf->Table[c[i],{i,Length[solutions]+1,Length[solutions]+Length[remainingf]}]];
DebugPrint["But now it's gone..."];
];
result=(LowestWeightSpace[G,pivotalStructure,n,t]=Function[{cc},Evaluate[matrix/.c->cc]]);
DebugPrint["... finished LowWeightSpace"];
PackageLowestWeightEigenspaces[G];
result
]
]


LoadLowestWeightEigenspaces[G:{_BigraphWithDuals,_BigraphWithDuals}]:=Module[{},
Off[Get::noopen,Needs::nocont];
Needs["FusionAtlas`Data`"<>(StringJoin@@(GraphToString/@G))<>"`LowestWeightEigenspace`"];
On[Get::noopen,Needs::nocont];
LoadLowestWeightEigenspaces[G]=False;
True
]


Clear[ChangePivotalStructure]


ChangePivotalStructure[A:GPA4Element[g:{_BigraphWithDuals,_BigraphWithDuals},over:{({0,0}|{0,1}|{1,1}|{1,0})...},{down_Integer,up_Integer},pivotalStructure:("Spherical"|"Lopsided"),coefficients_],newPivotalStructure:("Spherical"|"Lopsided")]:=Module[{exponent,simplifyCoefficient},
If[pivotalStructure==newPivotalStructure,Return[A]];
exponent=Switch[{pivotalStructure,newPivotalStructure},
{"Spherical","Lopsided"},1,
{"Lopsided","Spherical"},-1,
{"Spherical","Spherical"}|{"Lopsided","Lopsided"},0];
simplifyCoefficient[x_]:=If[newPivotalStructure=="Spherical",RootReduce[x],ToNumberField0[x,NumberFieldGenerator[g]]];
GPA4Element[g,over,{down,up},newPivotalStructure,coefficients/.(loop_->\[Zeta]_):>(loop->simplifyCoefficient[\[Zeta] Sqrt[Power[(Times@@((Power[LopsidedDimension[g,#],1]&/@UpVertices[loop,up])~Join~(Power[LopsidedDimension[g,#],-1]&/@DownVertices[loop,down]))),exponent]]])]
]


Clear[UpVertices,DownVertices]


UpVertices[loop_,up_]:=(loop~Join~loop)[[1;;2up+1;;2]]
DownVertices[loop_,down_]:=(loop~Join~loop~Join~{loop[[1]]})[[-1;;-2down-1;;-2]]


ChangePivotalStructure[A_GPA4Matrix,ps_]:=If[A[[4]]==ps,A,GPA4Matrix[ChangePivotalStructure[GPA4Element[A],ps]]]


cachedToNumberField[z__]:=cachedToNumberField[z]=ToNumberField[z]


GaugeAction[g_,X_GPA4Element]:=Module[{f,gauge},
f=g~Join~(Reverse[#[[1]]]->#[[2]]^-1&/@g);
gauge[loop_]:=Times@@(Partition[loop,3,2,{1,2}]/.f);
X/.(loop_->value_):>(loop->value gauge[loop])
]


VariableGaugeElement[G_,\[Gamma]_]:=Module[{edges},
edges=Flatten[GraphPaths[G,#]&/@Partition[{{0,0},{0,1},{1,1},{1,0},{0,0}},2,1],1];
#->\[Gamma][#]&/@edges
]


FindGaugeElementRelating[X_GPA4Element,Y_GPA4Element]:=Module[{G,\[Gamma],g,solutions},
G=X[[1]];
g=VariableGaugeElement[G,\[Gamma]];
solutions=Solve[GPACoefficients[GaugeAction[g,X]-Y]==0,g[[All,2]]];
If[solutions=={},{},
(g/.solutions)/._\[Gamma]:>1
]
]


Clear[NumberFieldGauge]
NumberFieldGauge[conn_,expandNumberField:(True|False):False]:=Module[{c=conn,G,\[Gamma],targets,var,solutions,gaugeElement,length},
G=c[[1]];
c=c/.K["\[Theta]",___]:>1;
c=GaugeAction[gaugeElement=VariableGaugeElement[G,\[Gamma]],c];
While[
c=c/.(x_->y_):>(x->Together[y]);
c=c/.(x_->y_?NumericQ):>(x->(cachedToNumberField[RootReduce[y],NumberFieldGenerator[G]]));
While[expandNumberField\[And]!FreeQ[c,ToNumberField],
DebugPrint["Enlarging number field..."];
NumberFieldGenerator[G]=ToNumberField[{NumberFieldGenerator[G]}~Join~Union[Cases[c,HoldPattern[ToNumberField[x_,_]]:>RootReduce[x],\[Infinity]]]][[1,1]];
DebugPrint["... new number field generator: ",NumberFieldGenerator[G]];
RedefineLopsidedDimension[G];
c=c/.{HoldPattern[ToNumberField[x_,_]]:>cachedToNumberField[x,NumberFieldGenerator[G]],x_AlgebraicNumber:>cachedToNumberField[x,NumberFieldGenerator[G]]};
];
length=Length[targets=Cases[GPACoefficients[c],e_/;!FreeQ[e,_\[Gamma]]]];
DebugPrint[ToString[length]<>" targets to go..."];
length>0,
var=Cases[targets,_\[Gamma],\[Infinity],1][[1]];
DebugPrint["Solving ",targets[[1]]," for ",var];
solutions=Solve[targets[[1]]==1,var];
If[Length[solutions]!=1,Print[targets];Abort[]];
c=c/.solutions[[1]];
gaugeElement=gaugeElement/.solutions[[1]];
];
{c,RootReduce[gaugeElement/._\[Gamma]:>1]}
]


PivotalStructureOf[A_GPA4Element]:=A[[4]]
PivotalStructureOf[A_GPA4Matrix]:=A[[4]]


Clear[FindEquationsForFlatGenerators]
FindEquationsForFlatGenerators[conn0_,\[Lambda]_,c_,allowGaugeTransformation:(True|False):True]:=Module[{G=conn0[[1]],ps,conn,lws0,lws1,flatness,solutions,generators,remaining},
ps=If[allowGaugeTransformation,"Lopsided",PivotalStructureOf[conn0]];
lws0=GPA4Element[LowestWeightEigenspace[G,ps,\[Lambda],0][c[0,#]&]];
lws1=GPA4Element[LowestWeightEigenspace[G,ps,\[Lambda],1][c[1,#]&]];
conn=If[allowGaugeTransformation,
NumberFieldGauge[ChangePivotalStructure[conn0,"Lopsided"]][[1]],
conn0
];
flatness=OneStrandFlatness[conn][lws0,RotateOneClick[lws1]]
]


Clear[FindFlatGenerators]
FindFlatGenerators[conn0_,\[Lambda]_,allowGaugeTransformation:(True|False):True]:=FindFlatGenerators[conn0,\[Lambda],allowGaugeTransformation]=Module[{G=conn0[[1]],ps,c,lws0,lws1,flatness,solutions,generators,remaining,map},
ps=If[allowGaugeTransformation,"Lopsided",PivotalStructureOf[conn0]];
lws0=GPA4Element[LowestWeightEigenspace[G,ps,\[Lambda],0][c[0,#]&]];
lws1=GPA4Element[LowestWeightEigenspace[G,ps,\[Lambda],1][c[1,#]&]];
flatness=FindEquationsForFlatGenerators[conn0,\[Lambda],c,allowGaugeTransformation][[-1,All,-1]];
lastFlatnessEquations=flatness;
flatnessReductionCounter=0;
If[ps=="Spherical",DebugPrint["RootReducing..."];
map=If[SecretParallelMode==True,DistributeDefinitions[cachedRootReduce];ParallelMap,Map];
flatness=map[Collect[#,_c,cachedRootReduce]&,flatness]];
DebugPrint["Finished preparing flatness equations"];
lastFlatnessEquations=flatness;
solutions=SparseMatrixSolve[DeleteCases[Collect[Union[flatness],_c],0],_c];
generators=(lws0/.#&)/@solutions
]


Clear[FindFlatLowestWeightVectors];
FindFlatLowestWeightVectors[conn0_,n_Integer]:=FindFlatLowestWeightVectors[conn0,n]=Module[{G=conn0[[1]],c,conn,lws0,lws1,flatness,solutions,generators,remaining},
lws0=GPA4Element[LowestWeightSpace[G,"Lopsided",n,0][c[0,#]&]];
lws1=GPA4Element[LowestWeightSpace[G,"Lopsided",n,1][c[1,#]&]];
conn=NumberFieldGauge[ChangePivotalStructure[conn0,"Lopsided"]][[1]];
flatness=OneStrandFlatness[conn][lws0,RotateOneClick[lws1]];
solutions=SparseMatrixSolve[DeleteCases[Collect[Union[flatness[[-1,All,-1]]],_c],0],_c];
generators=(lws0/.#&)/@solutions
]


qInteger\[Delta][k_]:=qInteger\[Delta][k]=Function[{\[Delta]},Evaluate[Collect[\[Delta] qInteger\[Delta][k-1][\[Delta]]-qInteger\[Delta][k-2][\[Delta]],\[Delta]]]]
qInteger\[Delta][2]=#&;
qInteger\[Delta][1]=1&;
qInteger\[Delta][0]=0&;


WenzlRecursion[gpa:(_GPA4Matrix|_GPA4Element),x_]:=
(DebugPrint["Beginning Wenzl recursion calculation."];
(DebugPrint["   adding strand on right"];AddStrandOnRight[gpa,gpa[[2,gpa[[3,2]]+2]]])-x GPAMultiply[(DebugPrint["   turning down top right"];TurnDownTopRightCorner[gpa]),(DebugPrint["   turning up bottom right"];TurnUpBottomRightCorner[gpa])])


Clear[JonesWenzlIdempotent]


JonesWenzlIdempotent[g:{_BigraphWithDuals,_BigraphWithDuals},0,over1:({0,0}|{0,1}|{1,1}|{1,0}),over2:({0,0}|{0,1}|{1,1}|{1,0}),pivotalStructure:("Spherical"|"Lopsided")]:=GPA4Matrix[EmptyGPA4Element[g,over1,pivotalStructure]];
JonesWenzlIdempotent[g:{_BigraphWithDuals,_BigraphWithDuals},1,over1:({0,0}|{0,1}|{1,1}|{1,0}),over2:({0,0}|{0,1}|{1,1}|{1,0}),pivotalStructure:("Spherical"|"Lopsided")]:=JonesWenzlIdempotent[g,1,over1,over2,pivotalStructure]=AddStrandOnRight[JonesWenzlIdempotent[g,0,over1,over2,pivotalStructure],over2];


JonesWenzlIdempotent[g:{_BigraphWithDuals,_BigraphWithDuals},k_,over1:({0,0}|{0,1}|{1,1}|{1,0}),over2:({0,0}|{0,1}|{1,1}|{1,0}),pivotalStructure:("Spherical"|"Lopsided")]/;k>1:=
If[LoadIdempotents[g],JonesWenzlIdempotent[g,k,over1,over2,pivotalStructure],
JonesWenzlIdempotent[g,k,over1,over2,pivotalStructure]=Module[{sm=GPA4Element[JonesWenzlIdempotent[g,k-1,over1,over2,pivotalStructure]],td,\[Delta]=DimensionOfGenerator[g],shove},
shove[x_]:=If[NumericQ[x],Switch[pivotalStructure,"Spherical",x,"Lopsided",ToNumberField[RootReduce[x],NumberFieldGenerator[g]]],Together[x]];
td=TurnDownTopRightCorner[sm];
GPA4Matrix[AddStrandOnRight[sm,If[EvenQ[k],over1,over2]]+
Sum[
shove[Power[(-1),a+k]Power[qInteger\[Delta][k][\[Delta]],-1]If[pivotalStructure=="Lopsided",If[Xor[OddQ[a],Mod[Plus@@over1,2]==1],\[Delta],1]If[Xor[OddQ[k],Mod[Plus@@over1,2]==1],Power[\[Delta],-1],1],1]qInteger\[Delta][a][\[Delta]]]TurnUpBottomRightCorner[AddStrandOnRight[TurnDownTopRightCorner[td,k-a-1],If[EvenQ[a],over1,over2]],k-a-1+1]
,{a,1,k-1}]]];
PackageIdempotents[g];
JonesWenzlIdempotent[g,k,over1,over2,pivotalStructure]
]


(*JonesWenzlIdempotent[g:{_BigraphWithDuals,_BigraphWithDuals},k_,over1:({0,0}|{0,1}|{1,1}|{1,0}),over2:({0,0}|{0,1}|{1,1}|{1,0}),pivotalStructure:("Spherical"|"Lopsided")]/;k>1:=
If[LoadIdempotents[g],JonesWenzlIdempotent[g,k,over1,over2,pivotalStructure],
Module[{result},
JonesWenzlIdempotent[g,k,over1,over2,pivotalStructure]=result=WenzlRecursion[JonesWenzlIdempotent[g,k-1,over1,over2,pivotalStructure],With[{\[Delta]=DimensionOfGenerator[g]},
If[pivotalStructure\[Equal]"Lopsided",
ToNumberField0[If[Xor[EvenQ[k],Mod[Plus@@over1,2]\[Equal]1],\[Delta],1/\[Delta]]qInteger\[Delta][k-1][\[Delta]]/qInteger\[Delta][k][\[Delta]],NumberFieldGenerator[g]],
RootReduce[qInteger\[Delta][k-1][\[Delta]]/qInteger\[Delta][k][\[Delta]]]
]
]];
PackageIdempotents[g];
result
]
]*)


LoadIdempotents[g:{_BigraphWithDuals,_BigraphWithDuals}]:=Module[{},
Off[Get::noopen,Needs::nocont];
Needs["FusionAtlas`Data`"<>(StringJoin@@(GraphToString/@g))<>"`Idempotents`"];
On[Get::noopen,Needs::nocont];
LoadIdempotents[g]=False;
True
]


S2Equation[G:{__BigraphWithDuals},\[Lambda]_]:=Module[{S,r,f},Function[{c},Evaluate[
S=CollectGPA4Matrix[LowestWeightEigenspace[G,"Lopsided",\[Lambda],0][c],_c];
r=ToNumberField0[RootReduce[BranchFactor[G[[1]]]],NumberFieldGenerator[G]];
GPA4Element[S.S-(r-1)S-r JonesWenzlIdempotent[G,DepthOfBranchPoint[G[[1]]]+1,{0,0},{0,1},"Lopsided"]]
]
]
]


ProgressiveRowReduce[matrix_,p_:50]:=Module[{counter=0,result={},remainingRows=matrix},
While[Length[remainingRows]>0,
DebugPrint[counter];
counter+=Min[p,Length[remainingRows]];
result=DeleteCases[RowReduce[result~Join~Take[remainingRows,Min[p,Length[remainingRows]]]],{0...}];
remainingRows=Drop[remainingRows,Min[p,Length[remainingRows]]];
];
result
]


RowReducedS2Equation[G:{__BigraphWithDuals},\[Lambda]_]:=Module[{quadratics,variables,vectors,rr,monomials},
Function[{c},Evaluate[
quadratics=DeleteCases[Union[GPACoefficients[S2Equation[G,\[Lambda]][c]]],0];
variables=Union[Cases[quadratics,c[i_],\[Infinity]]];
vectors=Flatten/@Transpose[Normal[CoefficientArrays[Take[quadratics,All],variables]]];
rr=ProgressiveRowReduce[vectors,20];
monomials={1}~Join~variables~Join~Flatten[Outer[Times,variables,variables],1];
DeleteCases[rr,_?ZeroVectorQ].monomials
]
]
]


Clear[S2Solutions]


S2Solutions[G:{__BigraphWithDuals},\[Lambda]_]:=Module[{simplifyCoefficient,S,gb,solution},
simplifyCoefficient[x_]:=ToNumberField[x,NumberFieldGenerator[G]];
Function[{c},Evaluate[
S=CollectGPA4Matrix[LowestWeightEigenspace[G,"Lopsided",\[Lambda],0][c],_c];
gb=GroebnerBasis[Collect[Union[GPACoefficients[S2Equation[G,\[Lambda]][c]]],_c],Union[Cases[S,_c,\[Infinity]]]];
gb=Expand[If[FreeQ[#,_AlgebraicNumber],#,#/Cases[#,_AlgebraicNumber,\[Infinity],1][[1]]]]&/@gb;
solution=(Solve[gb==0]/.Power[x_,1/2]:>simplifyCoefficient[Power[x,1/2]]);
CollectGPA4Matrix[#,_c,simplifyCoefficient]&/@(S/.solution)
]
]
]


Clear[IdentityTL]


IdentityTL[G:{_BigraphWithDuals,_BigraphWithDuals},0,over1:({0,0}|{0,1}|{1,1}|{1,0}),over2:({0,0}|{0,1}|{1,1}|{1,0}),pivotalStructure:("Spherical"|"Lopsided")]:=
EmptyGPA4Element[G,over1,pivotalStructure]


IdentityTL[G:{_BigraphWithDuals,_BigraphWithDuals},n_Integer/;n>=1,over1:({0,0}|{0,1}|{1,1}|{1,0}),over2:({0,0}|{0,1}|{1,1}|{1,0}),pivotalStructure:("Spherical"|"Lopsided")]:=IdentityTL[G,n,over1,over2,pivotalStructure]=Module[{over,paths,rpath,ae,be,p1,p2,p3,p4,values},
DebugPrint["Computing IdentityTL[G,",n,", ...]"];
over[0]=over1;
over[1]=over2;
paths=GraphPaths[G,Take[Flatten[Table[{over1,over2},{n/2+1}],1],n+1]];
values=Flatten[Function[{path},
rpath=Reverse[path];
PathToLoop[ConcatenatePaths[path,rpath]]->1
]/@paths,1];
GPA4Element[G,Most[Flatten[Table[{over1,over2},{n+1}],1]],{n,n},pivotalStructure,values]
]


(* a counts the number of strands until the cup from the top left, b counts from the bottom right *)


Clear[OneCupTL]


(*OneCupTL[G:{_BigraphWithDuals,_BigraphWithDuals},n_Integer,{a_,b_},over1:({0,0}|{0,1}|{1,1}|{1,0}),over2:({0,0}|{0,1}|{1,1}|{1,0}),pivotalStructure:("Spherical"|"Lopsided")]:=(*OneCupTL[G,n,{a,b},over1,over2,pivotalStructure]=*)TurnDownTopRightCorner[AddStrandOnRight[TurnUpBottomRightCorner[AddStrandOnRight[TurnDownTopRightCorner[IdentityTL[G,n-2,over1,over2,pivotalStructure],n-a-2],{over1,over2}\[LeftDoubleBracket]Mod[a+1,2]+1\[RightDoubleBracket]],n-a-1+b],{over1,over2}\[LeftDoubleBracket]Mod[n-b-1,2]+1\[RightDoubleBracket]],b+1]*)


OneCupPaths[G:{_BigraphWithDuals,_BigraphWithDuals},n_Integer,over1:({0,0}|{0,1}|{1,1}|{1,0}),over2:({0,0}|{0,1}|{1,1}|{1,0})]:=OneCupPaths[G,n,over1,over2]=GraphPaths[G,Take[Flatten[Table[{over1,over2},{n/2}],1],n-1]]


OneCupTL[G:{_BigraphWithDuals,_BigraphWithDuals},n_Integer,{a_,b_},over1:({0,0}|{0,1}|{1,1}|{1,0}),over2:({0,0}|{0,1}|{1,1}|{1,0}),pivotalStructure:("Spherical"|"Lopsided")]:=OneCupTL[G,n,{a,b},over1,over2,pivotalStructure]=Module[{over,paths,rpath,ae,be,p1,p2,p3,p4,values},
DebugPrint["Computing OneCupTL[G,",n,",",{a,b},"..."];
over[0]=over1;
over[1]=over2;
paths=OneCupPaths[G,n,over1,over2];
values=Flatten[Function[{path},
rpath=Reverse[path];
ae=EdgesAdjacentTo[G,path[[2a+1]],over[Mod[a+1,2]]];
be=EdgesAdjacentTo[G,rpath[[2b+1]],over[Mod[n+b+1,2]]];
{p1,p2}=SplitPathAt[path,a];
{p3,p4}=SplitPathAt[rpath,b];
Flatten[Outer[PathToLoop[ConcatenatePaths[p1,{path[[2a+1]],#1[[2]],#1[[1]],#1[[2]],path[[2a+1]]},p2,p3,{rpath[[2b+1]],#2[[2]],#2[[1]],#2[[2]],rpath[[2b+1]]},p4]]->CriticalPointCoefficient[G,1,#1[[1]],path[[2a+1]],pivotalStructure]CriticalPointCoefficient[G,-1,rpath[[2b+1]],#2[[1]],pivotalStructure]&,
ae,be,1],1]
]/@paths,1];
GPA4Element[G,Most[Flatten[Table[{over1,over2},{n+1}],1]],{n,n},pivotalStructure,values]
]


OneCupJonesWenzl[G:{_BigraphWithDuals,_BigraphWithDuals},n_Integer,over1:({0,0}|{0,1}|{1,1}|{1,0}),over2:({0,0}|{0,1}|{1,1}|{1,0}),pivotalStructure:"Spherical"]:=OneCupJonesWenzl[G,n,over1,over2,pivotalStructure]=
IdentityTL[G,n,over1,over2,pivotalStructure]+Sum[With[{\[Delta]=DimensionOfGenerator[G],aa=Min[a,n-b-2],bb=Min[b,n-a-2]},With[{cc=n-aa-bb-2},(-1)^(cc+1) qInteger\[Delta][aa+1][\[Delta]]qInteger\[Delta][bb+1][\[Delta]]qInteger\[Delta][n][\[Delta]]^-1]]OneCupTL[G,n,{a,b},over1,over2,pivotalStructure],{a,0,n-2},{b,0,n-2}]


SomeOneCupJonesWenzl[G:{_BigraphWithDuals,_BigraphWithDuals},n_Integer/;EvenQ[n],over1:({0,0}|{0,1}|{1,1}|{1,0}),over2:({0,0}|{0,1}|{1,1}|{1,0}),pivotalStructure:"Spherical"]:=SomeOneCupJonesWenzl[G,n,over1,over2,pivotalStructure]=Module[{result},
DebugPrint["beginning SomeOneCupJonesWenzl[",G,",",n,"...]"];
result=IdentityTL[G,n,over1,over2,pivotalStructure]+Sum[With[{\[Delta]=DimensionOfGenerator[G],aa=Min[a,n-b-2],bb=Min[b,n-a-2]},With[{cc=n-aa-bb-2},Power[(-1),cc+1]qInteger\[Delta][aa+1][\[Delta]]qInteger\[Delta][bb+1][\[Delta]]Power[qInteger\[Delta][n][\[Delta]],-1]]]OneCupTL[G,n,{a,b},over1,over2,pivotalStructure],{a,{0,n/2-1,n-2}},{b,0,n-2}];
DebugPrint["...finished SomeOneCupJonesWenzl"];
result
]


AddStrandOnLeft[A_GPA4Element,newOver_]:=TurnUpBottomRightCorner[TurnDownTopLeftCorner[AddStrandOnRight[TurnDownTopRightCorner[A,A[[3,2]]],newOver]],A[[3,2]]+1]


AnnularConsequences[A_GPA4Element,\[Sigma]_]:=AnnularConsequences[A,\[Sigma]]=Module[{n=Plus@@A[[3]]},
Flatten[Transpose[{NestList[GPAFourierTransformTwice[#]&,AddStrandOnLeft[\[Sigma]^-1 GPAFourierTransform[A],A[[2,1]]],n/2],GPAFourierTransform/@NestList[GPAFourierTransformTwice[#]&,AddStrandOnLeft[A,A[[2,2]]],n/2]}],1]]


GPACirc[A_GPA4Element,B_GPA4Element]:=GPAMultiply[TurnDownTopRightCorner[A],TurnUpBottomRightCorner[B]]


GPAStar[S_GPA4Element,T_GPA4Element]:=GPAFourierTransform[GPACirc[GPAFourierTransform[S],GPAFourierTransform[T]]]


End[];


EndPackage[];
